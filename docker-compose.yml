version: "3.8"

services:
  redis:
    image: redis:alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    environment:
      - REDIS_PASSWORD=mjlsbkCh2z8Ft63
    command: ["redis-server", "--requirepass", "mjlsbkCh2z8Ft63"]

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "80:80"
    depends_on:
      - redis
    restart: always
    env_file:
      - backend/.env
    environment:
      - REDIS_PASSWORD=mjlsbkCh2z8Ft63
      - REDIS_HOST=redis
      - REDIS_PORT=6379
    # ‚ùó DO NOT mount volumes unless you're developing
    command: ["npm", "run", "serve"]

  email-worker:
    build:
      context: ./backend
      dockerfile: email.worker.dockerfile
    depends_on:
      - redis
    restart: always
    env_file:
      - backend/.env
    environment:
      - REDIS_PASSWORD=mjlsbkCh2z8Ft63
      - REDIS_HOST=redis
      - REDIS_PORT=6379
    command: ["npm", "run", "emailWorker"]

  db-worker:
    build:
      context: ./backend
      dockerfile: db.worker.dockerfile
    depends_on:
      - redis
    restart: always
    env_file:
      - backend/.env
    environment:
      - REDIS_PASSWORD=mjlsbkCh2z8Ft63
      - REDIS_HOST=redis
      - REDIS_PORT=6379
    command: ["npm", "run", "dbWorker"]

  cronjob:
    build:
      context: ./backend
      dockerfile: cronjob.dockerfile
    depends_on:
      - redis
    restart: always
    env_file:
      - backend/.env
    environment:
      - REDIS_PASSWORD=mjlsbkCh2z8Ft63
      - REDIS_HOST=redis
      - REDIS_PORT=6379
    command: ["npm", "run", "cronJob"]

volumes:
  redis_data:
